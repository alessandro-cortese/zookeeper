<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!--
  /**
   * Licensed to the Apache Software Foundation (ASF) under one
   * or more contributor license agreements.  See the NOTICE file
   * distributed with this work for additional information
   * regarding copyright ownership.  The ASF licenses this file
   * to you under the Apache License, Version 2.0 (the
   * "License"); you may not use this file except in compliance
   * with the License.  You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   */
  -->
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.zookeeper</groupId>
    <artifactId>zookeeper-recipes</artifactId>
    <version>3.10.0-SNAPSHOT</version>
  </parent>

  <artifactId>zookeeper-recipes-election</artifactId>
  <packaging>jar</packaging>
  <name>Apache ZooKeeper - Recipes - Election</name>

  <description>
    This election interface recipe implements the leader election recipe
  </description>
  <properties>
    <ba-dua.version>0.6.0</ba-dua.version>
  </properties>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-transport-native-epoll</artifactId>
        <classifier>linux-x86_64</classifier>
      </dependency>

      <dependency>
        <groupId>org.apache.kerby</groupId>
        <artifactId>kerby-config</artifactId>
        <version>${kerby.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.kerby</groupId>
        <artifactId>kerb-simplekdc</artifactId>
        <version>${kerby.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

    </dependencies>

    <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.1</version>
        <!--configuration>
          <forkCount>${surefire-forkcount}</forkCount>
          <reuseForks>false</reuseForks>
          <argLine>-Xmx512m</argLine>
          <basedir>${project.basedir}</basedir>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <systemPropertyVariables>
            <build.test.dir>${project.build.directory}/surefire</build.test.dir>
          </systemPropertyVariables>
        </configuration-->
      </plugin>
    </plugins>
  </build>
<profiles>
  <!-- JaCoCo profile -->
  <profile>
    <id>JaCoCo-Coverage</id>
    <activation>
      <activeByDefault>false</activeByDefault>
      <property>
        <name>!skipJaCoCo-Coverage</name>
      </property>
    </activation>
    <build>
      <plugins>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <configuration>
            <excludes>
              <exclude>jdk.internal.reflect.*</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <formats>
                  <format>HTML</format>
                </formats>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </build>
  </profile>

  <!-- BADUA PROFILE -->
  <profile>
    <id>BaDua-Coverage</id>
    <activation>
      <activeByDefault>false</activeByDefault>
    </activation>
    <!--
    <properties>
      <argLine>-javaagent:target/dependency/ba-dua-agent-rt-${ba-dua.version}-all.jar -Doutput.file=target/badua.ser</argLine>
    </properties> -->
    <!-- Needed for generate the report -->
    <dependencies>
      <dependency>
        <groupId>br.usp.each.saeg</groupId>
        <artifactId>ba-dua-cli</artifactId>
        <version>${ba-dua.version}</version>
      </dependency>
    </dependencies>
    <build>
      <plugins>

        <!-- Copy ba-dua-agent-rt from .m2 directory to target/dependency -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.10</version>
          <executions>
            <execution>
              <goals>
                <goal>copy</goal>
              </goals>
              <configuration>
                <artifactItems>
                  <artifactItem>
                    <groupId>br.usp.each.saeg</groupId>
                    <artifactId>ba-dua-agent-rt</artifactId>
                    <classifier>all</classifier>
                    <version>${ba-dua.version}</version>
                  </artifactItem>
                </artifactItems>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Execute tests -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <argLine>
              -javaagent:target/dependency/ba-dua-agent-rt-0.6.0-all.jar
              -Doutput.file=target/badua.ser
            </argLine>
          </configuration>
        </plugin>

        <!-- Generate report in xml format -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.5.0</version>
          <executions>
            <execution>
              <goals>
                <goal>java</goal>
              </goals>
              <phase>verify</phase>
              <configuration>
                <mainClass>br.usp.each.saeg.badua.cli.Report</mainClass>
                <arguments>
                  <argument>-input</argument>
                  <argument>${project.build.directory}/badua.ser</argument>
                  <argument>-classes</argument>
                  <argument>${project.build.outputDirectory}</argument>
                  <argument>-show-classes</argument>
                  <argument>-show-methods</argument>
                  <argument>-xml</argument>
                  <argument>${project.build.directory}/badua.xml</argument>
                </arguments>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </build>

  </profile>

  <profile>
    <id>mutationPIT</id>
    <activation>
      <activeByDefault>false</activeByDefault>
    </activation>
    <properties>
      <withHistory>true</withHistory>
      <pitest.version>1.8.0</pitest.version>
    </properties>
    <build>
      <plugins>
        <!--
        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>${pitest.version}</version>
          <configuration>
            <targetClasses>
              <param>org.apache.bookkeeper.bookie.BufferedChannel</param>
            </targetClasses>
            <targetTests>
              <param>org.apache.bookkeeper.tls.BookieAuthZFactoryTest</param>
            </targetTests>
            <avoidCallsTo>
              <avoidCallsTo>org.slf4j</avoidCallsTo>
            </avoidCallsTo>
          </configuration>
          <executions>
            <execution>
              <id>PIT</id>
              <phase>test-compile</phase>
              <goals>
                <goal>mutationCoverage</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        -->
      </plugins>
    </build>
  </profile>
</profiles>
</project>